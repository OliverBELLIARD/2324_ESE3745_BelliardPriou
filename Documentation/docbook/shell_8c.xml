<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_shell_8c" xml:lang="en-US">
<title>/home/oliver/Documents/3A/Actionneur_Automatique_appliqee/2324_ESE3745_BelliardPriou/NUCLEO-G474RET6-Inverter_Pinout/Core/Src/mylibs/shell.c File Reference</title>
<indexterm><primary>/home/oliver/Documents/3A/Actionneur_Automatique_appliqee/2324_ESE3745_BelliardPriou/NUCLEO-G474RET6-Inverter_Pinout/Core/Src/mylibs/shell.c</primary></indexterm>
<para>

<para>Shell command interface for the Nucleo-STM32G474 microcontroller. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;usart.h&quot;<?linebreak?>#include &quot;mylibs/shell.h&quot;<?linebreak?>#include &quot;tim.h&quot;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &lt;stdlib.h&gt;<?linebreak?></programlisting>Include dependency graph for shell.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_shell_8c_1a1e1a7212cd1e25d36ce85620f03f996e">Shell_Init</link> (void)</para>

<para>Initializes the shell interface. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8c_1a9f70d5542e7f7f470ff7cd7d482caeb7">Shell_Loop</link> (void)</para>

<para>Main loop of the shell. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8c_1ae494a9643f29b87d6d81e5264e60e57b">HAL_UART_RxCpltCallback</link> (UART_HandleTypeDef *huart)</para>

<para>UART receive complete callback. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a8b893859891afe33d4bba72ba06fd381">prompt</link> [] = &quot;user@Nucleo-STM32G474RET6&gt;&gt;&quot;</para>

<para>Shell prompt message. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a835573497a60b314a9bf5a6fcac9602a">started</link> []</para>

<para>Startup message displayed on UART when shell initializes. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a98a2c452a5e7053154e9f49a4cad4e98">newline</link> [] = &quot;\r\n&quot;</para>

<para>Newline character sequence for UART. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a73072efaa96faae50fbceb96dc409a43">backspace</link> [] = &quot;\b \b&quot;</para>

<para>Backspace character sequence for UART. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a25205e7c6d817620c1d9f7351a817a04">cmdNotFound</link> [] = &quot;Command not found\r\n&quot;</para>

<para>Error message displayed when an unknown command is entered. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a438d322744fd2053e4b031aea2ad1cbe">brian</link> [] = &quot;Brian is in the kitchen\r\n&quot;</para>

<para>Response for the &quot;WhereisBrian?&quot; command. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a9f01ffb72325e6328a2239d6de7f4abc">uartRxReceived</link></para>

<para>Flag indicating UART receive event. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a2542ac6d4440b9e1c4a6435c55c79df3">uartRxBuffer</link> [<link linkend="_shell_8h_1a5bdd6772c246436bb14377095de79b31">UART_RX_BUFFER_SIZE</link>]</para>

<para>UART receive buffer. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a3f98e2db2fa0d8f0cfd87b887576207f">uartTxBuffer</link> [<link linkend="_shell_8h_1a05f5d709605c6317c97e4974bec3402a">UART_TX_BUFFER_SIZE</link>]</para>

<para>UART transmit buffer. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_shell_8c_1a59e1969bb35fb5ddc69a02e5b3f7347b">helpMessage</link> []</para>

<para>Help message listing available commands. </para>
</listitem>
            <listitem><para>char <link linkend="_shell_8c_1a755c320507955b333af8919b434c80dd">cmdBuffer</link> [<link linkend="_shell_8h_1a8a0465f8e8bbe71e4d6e8011e975bf75">CMD_BUFFER_SIZE</link>]</para>

<para>Command buffer to store user input. </para>
</listitem>
            <listitem><para>int <link linkend="_shell_8c_1a53cf6ebd0848970afbf70c176bec9314">idx_cmd</link></para>

<para>Index for the command buffer. </para>
</listitem>
            <listitem><para>char * <link linkend="_shell_8c_1a097621c7310da407a3cc4a6ae4568c56">argv</link> [<link linkend="_shell_8h_1a29b7451465deac204c5f7cb1f9c6e1fc">MAX_ARGS</link>]</para>

<para>Argument vector storing parsed command arguments. </para>
</listitem>
            <listitem><para>int <link linkend="_shell_8c_1ad1447518f4372828b8435ae82e48499e">argc</link> = 0</para>

<para>Argument count for the parsed command. </para>
</listitem>
            <listitem><para>char * <link linkend="_shell_8c_1a1d71425d9df28667d528833a4db10432">token</link></para>

<para>Token for parsing commands. </para>
</listitem>
            <listitem><para>int <link linkend="_shell_8c_1a83a0d9b47b936e62d1d68aea902883ac">newCmdReady</link> = 0</para>

<para>Flag indicating a new command is ready to process. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Shell command interface for the Nucleo-STM32G474 microcontroller. </para>

<para>Provides a basic shell interface to execute commands via UART. Commands include setting PWM parameters, starting/stopping PWM, resetting the microcontroller, and measuring current.</para>

<para><formalpara><title>Author</title>

<para>Nicolas </para>
</formalpara>
<formalpara><title>Date</title>

<para>October 1, 2023 </para>
</formalpara>
</para>
<para>
Definition in file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_shell_8c_1ae494a9643f29b87d6d81e5264e60e57b"/><section>
    <title>HAL_UART_RxCpltCallback()</title>
<indexterm><primary>HAL_UART_RxCpltCallback</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>HAL_UART_RxCpltCallback</secondary></indexterm>
<para><computeroutput>void HAL_UART_RxCpltCallback (UART_HandleTypeDef * huart)</computeroutput></para><para>

<para>UART receive complete callback. </para>
</para>

<para>Handles reception of a single character from UART.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>huart</entry><entry>
<para>UART handle </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00172">172</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a1e1a7212cd1e25d36ce85620f03f996e"/><section>
    <title>Shell_Init()</title>
<indexterm><primary>Shell_Init</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>Shell_Init</secondary></indexterm>
<para><computeroutput>void Shell_Init (void )</computeroutput></para><para>

<para>Initializes the shell interface. </para>
</para>

<para>Sets up UART reception, clears buffers, and displays the startup message. </para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00085">85</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8c_a1e1a7212cd1e25d36ce85620f03f996e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8c_1a9f70d5542e7f7f470ff7cd7d482caeb7"/><section>
    <title>Shell_Loop()</title>
<indexterm><primary>Shell_Loop</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>Shell_Loop</secondary></indexterm>
<para><computeroutput>void Shell_Loop (void )</computeroutput></para><para>

<para>Main loop of the shell. </para>
</para>

<para>Main loop for the shell interface.</para>

<para>Processes received UART data, parses commands, and executes them. </para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00101">101</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8c_a9f70d5542e7f7f470ff7cd7d482caeb7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8c_a9f70d5542e7f7f470ff7cd7d482caeb7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_shell_8c_1ad1447518f4372828b8435ae82e48499e"/><section>
    <title>argc</title>
<indexterm><primary>argc</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>argc</secondary></indexterm>
<para><computeroutput>int argc = 0</computeroutput></para><para>

<para>Argument count for the parsed command. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00072">72</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a097621c7310da407a3cc4a6ae4568c56"/><section>
    <title>argv</title>
<indexterm><primary>argv</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>argv</secondary></indexterm>
<para><computeroutput>char* argv[<link linkend="_shell_8h_1a29b7451465deac204c5f7cb1f9c6e1fc">MAX_ARGS</link>]</computeroutput></para><para>

<para>Argument vector storing parsed command arguments. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00069">69</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a73072efaa96faae50fbceb96dc409a43"/><section>
    <title>backspace</title>
<indexterm><primary>backspace</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>backspace</secondary></indexterm>
<para><computeroutput>uint8_t backspace[] = &quot;\b \b&quot;</computeroutput></para><para>

<para>Backspace character sequence for UART. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00033">33</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a438d322744fd2053e4b031aea2ad1cbe"/><section>
    <title>brian</title>
<indexterm><primary>brian</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>brian</secondary></indexterm>
<para><computeroutput>uint8_t brian[] = &quot;Brian is in the kitchen\r\n&quot;</computeroutput></para><para>

<para>Response for the &quot;WhereisBrian?&quot; command. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00039">39</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a755c320507955b333af8919b434c80dd"/><section>
    <title>cmdBuffer</title>
<indexterm><primary>cmdBuffer</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>cmdBuffer</secondary></indexterm>
<para><computeroutput>char cmdBuffer[<link linkend="_shell_8h_1a8a0465f8e8bbe71e4d6e8011e975bf75">CMD_BUFFER_SIZE</link>]</computeroutput></para><para>

<para>Command buffer to store user input. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00063">63</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a25205e7c6d817620c1d9f7351a817a04"/><section>
    <title>cmdNotFound</title>
<indexterm><primary>cmdNotFound</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>cmdNotFound</secondary></indexterm>
<para><computeroutput>uint8_t cmdNotFound[] = &quot;Command not found\r\n&quot;</computeroutput></para><para>

<para>Error message displayed when an unknown command is entered. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00036">36</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a59e1969bb35fb5ddc69a02e5b3f7347b"/><section>
    <title>helpMessage</title>
<indexterm><primary>helpMessage</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>helpMessage</secondary></indexterm>
<para><computeroutput>uint8_t helpMessage[]</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\nAvailable&#32;commands:&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;help\tDisplays&#32;this&#32;help&#32;message.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;ratio\tSets&#32;a&#32;new&#32;cyclic&#32;ratio.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;speed\tSets&#32;a&#32;new&#32;PWM&#32;speed.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;start\tStarts&#32;the&#32;PWM&#32;generation.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;stop\tStops&#32;the&#32;PWM&#32;generation.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;reset\tResets&#32;the&#32;microcontroller.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n-&#32;current\tPrints&#32;the&#32;measured&#32;current&#32;of&#32;U.&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n&quot;</emphasis>
</programlisting><para>

<para>Help message listing available commands. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00051">51</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a53cf6ebd0848970afbf70c176bec9314"/><section>
    <title>idx_cmd</title>
<indexterm><primary>idx_cmd</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>idx_cmd</secondary></indexterm>
<para><computeroutput>int idx_cmd</computeroutput></para><para>

<para>Index for the command buffer. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00066">66</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a83a0d9b47b936e62d1d68aea902883ac"/><section>
    <title>newCmdReady</title>
<indexterm><primary>newCmdReady</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>newCmdReady</secondary></indexterm>
<para><computeroutput>int newCmdReady = 0</computeroutput></para><para>

<para>Flag indicating a new command is ready to process. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00078">78</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a98a2c452a5e7053154e9f49a4cad4e98"/><section>
    <title>newline</title>
<indexterm><primary>newline</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>newline</secondary></indexterm>
<para><computeroutput>uint8_t newline[] = &quot;\r\n&quot;</computeroutput></para><para>

<para>Newline character sequence for UART. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00030">30</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a8b893859891afe33d4bba72ba06fd381"/><section>
    <title>prompt</title>
<indexterm><primary>prompt</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>prompt</secondary></indexterm>
<para><computeroutput>uint8_t prompt[] = &quot;user@Nucleo-STM32G474RET6&gt;&gt;&quot;</computeroutput></para><para>

<para>Shell prompt message. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00021">21</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a835573497a60b314a9bf5a6fcac9602a"/><section>
    <title>started</title>
<indexterm><primary>started</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>started</secondary></indexterm>
<para><computeroutput>uint8_t started[]</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n*-----------------------------*&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n|&#32;Welcome&#32;on&#32;Nucleo-STM32G474&#32;|&quot;</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\r\n*-----------------------------*\r\n&quot;</emphasis>
</programlisting><para>

<para>Startup message displayed on UART when shell initializes. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00024">24</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a1d71425d9df28667d528833a4db10432"/><section>
    <title>token</title>
<indexterm><primary>token</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>token</secondary></indexterm>
<para><computeroutput>char* token</computeroutput></para><para>

<para>Token for parsing commands. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00075">75</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a2542ac6d4440b9e1c4a6435c55c79df3"/><section>
    <title>uartRxBuffer</title>
<indexterm><primary>uartRxBuffer</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>uartRxBuffer</secondary></indexterm>
<para><computeroutput>uint8_t uartRxBuffer[<link linkend="_shell_8h_1a5bdd6772c246436bb14377095de79b31">UART_RX_BUFFER_SIZE</link>]</computeroutput></para><para>

<para>UART receive buffer. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00045">45</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a9f01ffb72325e6328a2239d6de7f4abc"/><section>
    <title>uartRxReceived</title>
<indexterm><primary>uartRxReceived</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>uartRxReceived</secondary></indexterm>
<para><computeroutput>uint8_t uartRxReceived</computeroutput></para><para>

<para>Flag indicating UART receive event. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00042">42</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
<anchor xml:id="_shell_8c_1a3f98e2db2fa0d8f0cfd87b887576207f"/><section>
    <title>uartTxBuffer</title>
<indexterm><primary>uartTxBuffer</primary><secondary>shell.c</secondary></indexterm>
<indexterm><primary>shell.c</primary><secondary>uartTxBuffer</secondary></indexterm>
<para><computeroutput>uint8_t uartTxBuffer[<link linkend="_shell_8h_1a05f5d709605c6317c97e4974bec3402a">UART_TX_BUFFER_SIZE</link>]</computeroutput></para><para>

<para>UART transmit buffer. </para>
</para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00048">48</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
</section>
</section>
</section>
