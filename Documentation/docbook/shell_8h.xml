<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_shell_8h" xml:lang="en-US">
<title>/home/oliver/Documents/3A/Actionneur_Automatique_appliqee/2324_ESE3745_BelliardPriou/NUCLEO-G474RET6-Inverter_Pinout/Core/Inc/mylibs/shell.h File Reference</title>
<indexterm><primary>/home/oliver/Documents/3A/Actionneur_Automatique_appliqee/2324_ESE3745_BelliardPriou/NUCLEO-G474RET6-Inverter_Pinout/Core/Inc/mylibs/shell.h</primary></indexterm>
<para>

<para>Header file for the shell interface. </para>
 
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_shell_8h_1a5bdd6772c246436bb14377095de79b31">UART_RX_BUFFER_SIZE</link>&#160;&#160;&#160;1</para>

<para>UART receive buffer size. </para>
</listitem>
            <listitem><para>#define <link linkend="_shell_8h_1a05f5d709605c6317c97e4974bec3402a">UART_TX_BUFFER_SIZE</link>&#160;&#160;&#160;64</para>

<para>UART transmit buffer size. </para>
</listitem>
            <listitem><para>#define <link linkend="_shell_8h_1a8a0465f8e8bbe71e4d6e8011e975bf75">CMD_BUFFER_SIZE</link>&#160;&#160;&#160;64</para>

<para>Command buffer size. </para>
</listitem>
            <listitem><para>#define <link linkend="_shell_8h_1a29b7451465deac204c5f7cb1f9c6e1fc">MAX_ARGS</link>&#160;&#160;&#160;9</para>

<para>Maximum number of command arguments. </para>
</listitem>
            <listitem><para>#define <link linkend="_shell_8h_1aca3b498f5936dbe4f3076a47c3e1810d">ASCII_LF</link>&#160;&#160;&#160;0x0A</para>

<para>ASCII value for line feed. </para>
</listitem>
            <listitem><para>#define <link linkend="_shell_8h_1a089ed4925403ab02a05e603967c74579">ASCII_CR</link>&#160;&#160;&#160;0x0D</para>

<para>ASCII value for carriage return. </para>
</listitem>
            <listitem><para>#define <link linkend="_shell_8h_1a681f208df4071753dd6a7a71d0f5780e">ASCII_BACK</link>&#160;&#160;&#160;0x08</para>

<para>ASCII value for backspace. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_shell_8h_1a1e1a7212cd1e25d36ce85620f03f996e">Shell_Init</link> (void)</para>

<para>Initializes the shell interface. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1a9f70d5542e7f7f470ff7cd7d482caeb7">Shell_Loop</link> (void)</para>

<para>Main loop for the shell interface. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1ab5c61f6cca95944497de9d5c1a7a0e53">set_PWM_ratio</link> (double ratio)</para>

<para>Sets the PWM duty cycle ratio. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1a53873ca97f4eff976cda4093424c60b1">set_PWM_speed</link> (int speed)</para>

<para>Sets the PWM speed. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1a933ee4c92795bba0229662fbf0a8b144">start_PWM</link> (void)</para>

<para>Starts the PWM generation. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1a5dbeee862c827ec0736b6e79c42859a9">stop_PWM</link> (void)</para>

<para>Stops the PWM generation. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1aca90e0598a78eabb24f644da77050761">reset_inverter</link> (void)</para>

<para>Resets the microcontroller. </para>
</listitem>
            <listitem><para>void <link linkend="_shell_8h_1ae52eb9986b1b73a2f95b46d26cd690b4">read_current</link> (void)</para>

<para>Reads and prints the current value. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Header file for the shell interface. </para>

<para>This header defines constants, macros, and function prototypes for the shell interface used in the project. The shell provides a command-line interface over UART for controlling various functionalities of the system. </para>
<para>
Definition in file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_shell_8h_1a681f208df4071753dd6a7a71d0f5780e"/><section>
    <title>ASCII_BACK</title>
<indexterm><primary>ASCII_BACK</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>ASCII_BACK</secondary></indexterm>
<para><computeroutput>#define ASCII_BACK&#160;&#160;&#160;0x08</computeroutput></para><para>

<para>ASCII value for backspace. </para>
</para>

<para>Backspace character used for editing command input. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00067">67</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<anchor xml:id="_shell_8h_1a089ed4925403ab02a05e603967c74579"/><section>
    <title>ASCII_CR</title>
<indexterm><primary>ASCII_CR</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>ASCII_CR</secondary></indexterm>
<para><computeroutput>#define ASCII_CR&#160;&#160;&#160;0x0D</computeroutput></para><para>

<para>ASCII value for carriage return. </para>
</para>

<para>Carriage return (CR) character used in command-line communication. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00060">60</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<anchor xml:id="_shell_8h_1aca3b498f5936dbe4f3076a47c3e1810d"/><section>
    <title>ASCII_LF</title>
<indexterm><primary>ASCII_LF</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>ASCII_LF</secondary></indexterm>
<para><computeroutput>#define ASCII_LF&#160;&#160;&#160;0x0A</computeroutput></para><para>

<para>ASCII value for line feed. </para>
</para>

<para>Line feed (LF) character used in command-line communication. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00053">53</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<anchor xml:id="_shell_8h_1a8a0465f8e8bbe71e4d6e8011e975bf75"/><section>
    <title>CMD_BUFFER_SIZE</title>
<indexterm><primary>CMD_BUFFER_SIZE</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>CMD_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#define CMD_BUFFER_SIZE&#160;&#160;&#160;64</computeroutput></para><para>

<para>Command buffer size. </para>
</para>

<para>Defines the size of the command buffer used to store incoming commands. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00039">39</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<anchor xml:id="_shell_8h_1a29b7451465deac204c5f7cb1f9c6e1fc"/><section>
    <title>MAX_ARGS</title>
<indexterm><primary>MAX_ARGS</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>MAX_ARGS</secondary></indexterm>
<para><computeroutput>#define MAX_ARGS&#160;&#160;&#160;9</computeroutput></para><para>

<para>Maximum number of command arguments. </para>
</para>

<para>Defines the maximum number of arguments a single command can have. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00046">46</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<anchor xml:id="_shell_8h_1a5bdd6772c246436bb14377095de79b31"/><section>
    <title>UART_RX_BUFFER_SIZE</title>
<indexterm><primary>UART_RX_BUFFER_SIZE</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>UART_RX_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#define UART_RX_BUFFER_SIZE&#160;&#160;&#160;1</computeroutput></para><para>

<para>UART receive buffer size. </para>
</para>

<para>Defines the size of the UART receive buffer. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00025">25</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
<anchor xml:id="_shell_8h_1a05f5d709605c6317c97e4974bec3402a"/><section>
    <title>UART_TX_BUFFER_SIZE</title>
<indexterm><primary>UART_TX_BUFFER_SIZE</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>UART_TX_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#define UART_TX_BUFFER_SIZE&#160;&#160;&#160;64</computeroutput></para><para>

<para>UART transmit buffer size. </para>
</para>

<para>Defines the size of the UART transmit buffer. </para>
<para>
Definition at line <link linkend="_shell_8h_source_1l00032">32</link> of file <link linkend="_shell_8h_source">shell.h</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_shell_8h_1ae52eb9986b1b73a2f95b46d26cd690b4"/><section>
    <title>read_current()</title>
<indexterm><primary>read_current</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>read_current</secondary></indexterm>
<para><computeroutput>void read_current (void )</computeroutput></para><para>

<para>Reads and prints the current value. </para>
</para>

<para>Reads the ADC value, converts it to the current measurement, and outputs the result via UART.</para>

<para>Reads and prints the current value.</para>

<para>Converts the ADC value to a voltage and calculates the current based on the sensor&apos;s resolution. </para>
<para>
Definition at line <link linkend="_main_8c_source_1l00179">179</link> of file <link linkend="_main_8c_source">main.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_ae52eb9986b1b73a2f95b46d26cd690b4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1aca90e0598a78eabb24f644da77050761"/><section>
    <title>reset_inverter()</title>
<indexterm><primary>reset_inverter</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>reset_inverter</secondary></indexterm>
<para><computeroutput>void reset_inverter (void )</computeroutput></para><para>

<para>Resets the microcontroller. </para>
</para>

<para>Performs a system reset using the NVIC_SystemReset() function. </para>
<para>
Definition at line <link linkend="_main_8c_source_1l00168">168</link> of file <link linkend="_main_8c_source">main.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_aca90e0598a78eabb24f644da77050761_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1ab5c61f6cca95944497de9d5c1a7a0e53"/><section>
    <title>set_PWM_ratio()</title>
<indexterm><primary>set_PWM_ratio</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>set_PWM_ratio</secondary></indexterm>
<para><computeroutput>void set_PWM_ratio (double ratio)</computeroutput></para><para>

<para>Sets the PWM duty cycle ratio. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ratio</entry><entry>
<para>The desired PWM duty cycle ratio (0.0 to 1.0).</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Sets the PWM duty cycle ratio.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ratio</entry><entry>
<para>Duty cycle ratio (0.0 to 1.0). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_main_8c_source_1l00116">116</link> of file <link linkend="_main_8c_source">main.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_ab5c61f6cca95944497de9d5c1a7a0e53_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1a53873ca97f4eff976cda4093424c60b1"/><section>
    <title>set_PWM_speed()</title>
<indexterm><primary>set_PWM_speed</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>set_PWM_speed</secondary></indexterm>
<para><computeroutput>void set_PWM_speed (int speed)</computeroutput></para><para>

<para>Sets the PWM speed. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>speed</entry><entry>
<para>The desired PWM speed, in absolute units.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Sets the PWM speed.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>speed</entry><entry>
<para>Desired PWM pulse width (0 to PWM_MAX_VAL). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_main_8c_source_1l00128">128</link> of file <link linkend="_main_8c_source">main.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a53873ca97f4eff976cda4093424c60b1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1a1e1a7212cd1e25d36ce85620f03f996e"/><section>
    <title>Shell_Init()</title>
<indexterm><primary>Shell_Init</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>Shell_Init</secondary></indexterm>
<para><computeroutput>void Shell_Init (void )</computeroutput></para><para>

<para>Initializes the shell interface. </para>
</para>

<para>Sets up the shell, initializes buffers, and configures UART interrupts for receiving input. Displays a welcome message and starts the prompt.</para>

<para>Sets up UART reception, clears buffers, and displays the startup message. </para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00085">85</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a1e1a7212cd1e25d36ce85620f03f996e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1a9f70d5542e7f7f470ff7cd7d482caeb7"/><section>
    <title>Shell_Loop()</title>
<indexterm><primary>Shell_Loop</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>Shell_Loop</secondary></indexterm>
<para><computeroutput>void Shell_Loop (void )</computeroutput></para><para>

<para>Main loop for the shell interface. </para>
</para>

<para>Processes received UART input, parses commands, and executes the corresponding functionality. Supports various commands for controlling PWM, resetting the system, and reading the current.</para>

<para>Main loop for the shell interface.</para>

<para>Processes received UART data, parses commands, and executes them. </para>
<para>
Definition at line <link linkend="_shell_8c_source_1l00101">101</link> of file <link linkend="_shell_8c_source">shell.c</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a9f70d5542e7f7f470ff7cd7d482caeb7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a9f70d5542e7f7f470ff7cd7d482caeb7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1a933ee4c92795bba0229662fbf0a8b144"/><section>
    <title>start_PWM()</title>
<indexterm><primary>start_PWM</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>start_PWM</secondary></indexterm>
<para><computeroutput>void start_PWM (void )</computeroutput></para><para>

<para>Starts the PWM generation. </para>
</para>

<para>Configures and starts the PWM signal generation on the TIM1 channels.</para>

<para>Starts the PWM generation.</para>

<para>Initializes the PWM channels with a base speed corresponding to a 50% duty cycle. </para>
<para>
Definition at line <link linkend="_main_8c_source_1l00141">141</link> of file <link linkend="_main_8c_source">main.c</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a933ee4c92795bba0229662fbf0a8b144_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a933ee4c92795bba0229662fbf0a8b144_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_shell_8h_1a5dbeee862c827ec0736b6e79c42859a9"/><section>
    <title>stop_PWM()</title>
<indexterm><primary>stop_PWM</primary><secondary>shell.h</secondary></indexterm>
<indexterm><primary>shell.h</primary><secondary>stop_PWM</secondary></indexterm>
<para><computeroutput>void stop_PWM (void )</computeroutput></para><para>

<para>Stops the PWM generation. </para>
</para>

<para>Disables the PWM signal generation on the TIM1 channels.</para>

<para>Stops the PWM generation. </para>
<para>
Definition at line <link linkend="_main_8c_source_1l00156">156</link> of file <link linkend="_main_8c_source">main.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="shell_8h_a5dbeee862c827ec0736b6e79c42859a9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
